name: CI Workflow

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow for version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install --prefix frontend

      - name: Build project
        run: npm run build --prefix frontend

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.run_id }}
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract tag name
        id: extract_tag
        run: echo "TAG_NAME=$(basename ${{ github.ref }})" >> $GITHUB_ENV

      - name: List uploaded artifacts
        uses: actions/github-script@v6
        id: list-artifacts
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            console.log('Artifacts found:');
            artifacts.data.artifacts.forEach(artifact => {
              console.log(`- ${artifact.name}`);
            });

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.run_id }}
          path: build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          release_id=$(gh api -X GET repos/${{ github.repository }}/releases/${{ env.TAG_NAME }} -q .id)
          if [ -z "$release_id" ]; then
            gh release create ${{ env.TAG_NAME }}
          else
            gh release edit ${{ env.TAG_NAME }}
          fi

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/raffle-tool.zip
          asset_name: raffle-tool.zip
          asset_content_type: application/zip
