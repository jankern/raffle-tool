name: Build and Release

on:
  push:
    tags:
      - "*" # Run on all tags pushed to the repository

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install
        working-directory: ./frontend # Navigate to frontend directory

      - name: Build with esbuild
        run: npm run build # Adjust based on your build script
        working-directory: ./frontend # Navigate to frontend directory

      - name: Get Latest Release ID
        id: get_release_id
        run: |
          RESPONSE=$(curl -s -X GET \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${{ github.ref }}")
          RELEASE_ID=$(echo $RESPONSE | jq -r '.id')
          if [ "$RELEASE_ID" = "null" ]; then
            echo "Release with tag '${{ github.ref }}' not found."
            exit 1
          fi
          echo "::set-output name=release_id::$RELEASE_ID"

      - name: Update Release
        if: steps.get_release_id.outputs.release_id != null
        run: |
          RELEASE_ID="${{ steps.get_release_id.outputs.release_id }}"
          RESPONSE=$(curl -s -X PATCH \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}" \
            -d "{\"tag_name\": \"${{ github.ref }}\", \"name\": \"Release ${{ github.ref }}\", \"draft\": false, \"prerelease\": false}")

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/raffle-tool
          asset_name: raffle-tool-${{ github.ref }}.zip
          asset_content_type: application/zip
